{"version":3,"file":"static/js/171.54824c5a.chunk.js","mappings":"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","sources":["../node_modules/@walletconnect/modal-core/src/controllers/RouterCtrl.ts","../node_modules/@walletconnect/modal-core/src/utils/CoreUtil.ts","../node_modules/@walletconnect/modal-core/src/controllers/EventsCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/OptionsCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/ConfigCtrl.ts","../node_modules/@walletconnect/modal-core/src/utils/ExplorerUtil.ts","../node_modules/@walletconnect/modal-core/src/controllers/ExplorerCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/ModalCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/ThemeCtrl.ts","../node_modules/@walletconnect/modal-core/src/controllers/ToastCtrl.ts","../node_modules/@walletconnect/modal/src/client.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  WCM_VERSION: 'WCM_VERSION',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n    } catch {\n      console.info('Unable to set WalletConnect deep link')\n    }\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    try {\n      const [href] = wcUri.split('?')\n      localStorage.setItem(\n        CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n        JSON.stringify({ href, name: 'Android' })\n      )\n    } catch {\n      console.info('Unable to set WalletConnect android deep link')\n    }\n  },\n\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n    } catch {\n      console.info('Unable to remove WalletConnect deep link')\n    }\n  },\n\n  setModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(CoreUtil.WCM_VERSION, process.env.ROLLUP_WCM_VERSION ?? 'UNKNOWN')\n      }\n    } catch {\n      console.info('Unable to set Web3Modal version in storage')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  chains: undefined,\n  walletConnectUri: undefined,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setWalletConnectUri(walletConnectUri: OptionsCtrlState['walletConnectUri']) {\n    state.walletConnectUri = walletConnectUri\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsAuth(isAuth: OptionsCtrlState['isAuth']) {\n    state.isAuth = isAuth\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chains: undefined,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setChains(config.chains)\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode))\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n\n    CoreUtil.setModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\nconst SDK_TYPE = 'wcm'\nconst SDK_VERSION = `js-${process.env.ROLLUP_WCM_VERSION}`\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const allParams = { sdkType: SDK_TYPE, sdkVersion: SDK_VERSION, ...params }\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(allParams).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const { chains, isAuth } = OptionsCtrl.state\n      const chainsFilter = chains?.join(',')\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        sdks: isAuth ? 'auth_v1' : undefined,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    // Fetch only auth wallets\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = 'auth_v1'\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri: string\n  chains?: string[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      CoreUtil.removeWalletConnectDeepLink()\n\n      OptionsCtrl.setWalletConnectUri(options?.uri)\n      OptionsCtrl.setChains(options?.chains)\n      RouterCtrl.reset('ConnectWallet')\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n","import type { ConfigCtrlState, ThemeCtrlState } from '@walletconnect/modal-core'\nimport { ConfigCtrl, ModalCtrl, OptionsCtrl, ThemeCtrl } from '@walletconnect/modal-core'\n\n/**\n * Types\n */\nexport type WalletConnectModalConfig = ConfigCtrlState & ThemeCtrlState\n\n/**\n * Client\n */\nexport class WalletConnectModal {\n  public constructor(config: WalletConnectModalConfig) {\n    ThemeCtrl.setThemeConfig(config)\n    ConfigCtrl.setConfig(config)\n    this.initUi()\n  }\n\n  private async initUi() {\n    if (typeof window !== 'undefined') {\n      await import('@walletconnect/modal-ui')\n      const modal = document.createElement('wcm-modal')\n      document.body.insertAdjacentElement('beforeend', modal)\n      OptionsCtrl.setIsUiLoaded(true)\n    }\n  }\n\n  public openModal = ModalCtrl.open\n\n  public closeModal = ModalCtrl.close\n\n  public subscribeModal = ModalCtrl.subscribe\n\n  public setTheme = ThemeCtrl.setThemeConfig\n}\n"],"names":["o","u","history","view","data","T","state","subscribe","e","h","push","t","reset","replace","length","goBack","pop","slice","setData","a","WALLETCONNECT_DEEPLINK_CHOICE","WCM_VERSION","RECOMMENDED_WALLET_AMOUNT","isMobile","window","Boolean","matchMedia","matches","test","navigator","userAgent","isAndroid","toLowerCase","includes","isIos","isHttpUrl","startsWith","isArray","Array","formatNativeUrl","s","this","formatUniversalUrl","n","replaceAll","endsWith","setWalletConnectDeepLink","encodeURIComponent","async","Promise","setTimeout","openHref","open","localStorage","setItem","JSON","stringify","href","name","console","info","setWalletConnectAndroidDeepLink","split","removeWalletConnectDeepLink","removeItem","setModalVersionInStorage","getWalletRouterData","Wallet","Error","_","location","hostname","protocol","r","enabled","userSessionId","events","connectedWalletId","R","P","initialize","crypto","randomUUID","setConnectedWalletId","click","type","timestamp","Date","now","track","c","chains","walletConnectUri","isAuth","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","p","setChains","setWalletConnectUri","setIsCustomDesktop","setIsCustomMobile","setIsDataLoaded","setIsUiLoaded","setIsAuth","W","projectId","mobileWallets","desktopWallets","walletImages","enableAuthMode","enableExplorer","explorerExcludedWalletIds","explorerRecommendedWalletIds","termsOfServiceUrl","privacyPolicyUrl","y","setConfig","Object","assign","V","defineProperty","D","getOwnPropertySymbols","H","prototype","hasOwnProperty","B","propertyIsEnumerable","M","m","enumerable","configurable","writable","value","L","E","O","w","l","call","K","sdkType","sdkVersion","URL","searchParams","append","entries","forEach","_ref","i","String","fetch","json","getWalletImageUrl","getAssetImageUrl","z","j","J","q","k","x","N","d","wallets","listings","total","page","search","recomendedWallets","te","getRecomendedWallets","recommendedIds","join","getAllListings","values","sort","v","indexOf","id","sdks","version","excludedIds","b","getMobileListings","getDesktopListings","getWallets","f","F","map","filter","A","U","resetSearch","I","se","uri","setInterval","clearInterval","close","G","$","Q","X","S","C","themeMode","ne","setThemeConfig","themeVariables","Y","g","message","variant","oe","openToast","closeToast","constructor","openModal","closeModal","subscribeModal","setTheme","initUi","document","createElement","body","insertAdjacentElement"],"sourceRoot":""}